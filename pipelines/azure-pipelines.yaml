pool:
  vmImage: ubuntu-latest

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - modules

resources:
  repositories:
    - repository: wiki
      type: git
      name: project/projectName.wiki

variables:
  containerRegistryName: ''
  serviceConnection: ''
  wikiRepo: ''

stages:
  - stage: Release
    displayName: "Release"
    jobs:
      - job: Deploy
        displayName: "Deploy Modules"
        steps:
          - checkout: self
            persistCredentials: true
            fetchDepth: 0

          - checkout: wiki
            persistCredentials: true

          - pwsh: |
              function CheckModuleMetadata($path) {
                $items = Get-ChildItem -Path $path

                foreach ($item in $items) {
                  if ($item.PSIsContainer) {
                    CheckModuleMetadata $item.FullName
                  }
                  else {
                    $moduleContent = Get-Content -Path $item.FullName -Raw

                    if ($moduleContent -match 'metadata majorVersion' -and $moduleContent -match 'metadata minorVersion') {
                      Write-Host "Metadata exists for $($item.BaseName)"
                    }
                    else {
                      Write-Error "Metadata does not exist for $($item.BaseName). Add majorVersion and minorVersion metadata tags!"
                    }
                  }
                }
              }
              CheckModuleMetadata $(System.DefaultWorkingDirectory)/$(Build.Repository.Name)/modules
            displayName: "Check if metadata tags exist for all modules"
            continueOnError: false

          - task: AzureCLI@2
            displayName: "Upload modules to ACR"
            inputs:
              workingDirectory: $(System.DefaultWorkingDirectory)/$(Build.Repository.Name)
              azureSubscription: ${{ variables.serviceConnection }}
              scriptType: pscore
              scriptLocation: scriptPath
              scriptPath: "$(Build.Repository.Name)/pipelines/scripts/upload-modules-to-acr.ps1"
              arguments: |
                -containerRegistryName ${{ variables.containerRegistryName }} `
                -modulePath "$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)/modules"

          - template: templates/template-add-documentation.yaml
            parameters:
              markdownFolderPath: "$(System.DefaultWorkingDirectory)/documentation"
              moduleVersions: $(ModuleVersions)
              scriptFolderPath: "$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)/pipelines/scripts"
              templateFolderPath: "$(System.DefaultWorkingDirectory)/$(Build.Repository.Name)/modules"
              wikiModuleFolder: "${{ variables.wikiRepo}}/Bicep-Modules"
              devopsOrganizationUri: $(System.TeamFoundationCollectionUri)
              devopsProjectName: $(System.TeamProject)
              devopsRepoName: $(Build.Repository.Name)
